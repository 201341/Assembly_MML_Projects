41 2 0
38 1
8 252 396 301 347 1 0
8 318 396 367 347 1 0
22 258 348 424 328 0 \NUL
Read Register 1 Address
8 432 396 481 347 1 0
8 498 396 547 347 1 0
22 438 348 604 328 0 \NUL
Read Register 2 Address
20 720 414 779 395 0
wadr_0
20 654 414 713 395 0
wadr_1
8 606 396 655 347 1 0
8 672 396 721 347 1 0
22 612 348 767 328 0 \NUL
Write Register Address
20 480 414 539 395 0
adr2_1
20 546 414 605 395 0
adr2_0
20 366 414 425 395 0
adr1_0
20 300 414 359 395 0
adr1_1
19 174 108 233 89 0
reg0_2
19 162 84 221 65 0
reg0_3
19 198 156 257 137 0
reg0_0
19 186 132 245 113 0
reg0_1
11 258 108 285 10 0 1
22 144 36 255 16 0 \NUL
Register 0 Value
19 330 108 389 89 0
reg1_2
19 318 84 377 65 0
reg1_3
19 354 156 413 137 0
reg1_0
19 342 132 401 113 0
reg1_1
11 414 108 441 10 0 1
22 300 36 411 16 0 \NUL
Register 1 Value
19 486 108 545 89 0
reg2_2
19 474 84 533 65 0
reg2_3
19 510 156 569 137 0
reg2_0
19 498 132 557 113 0
reg2_1
11 570 108 597 10 0 1
22 456 36 567 16 0 \NUL
Register 2 Value
19 642 108 701 89 0
reg3_2
19 630 84 689 65 0
reg3_3
19 666 156 725 137 0
reg3_0
19 654 132 713 113 0
reg3_1
11 726 108 753 10 0 1
22 612 36 723 16 0 \NUL
Register 3 Value
19 648 264 707 245 0
alu_2
19 636 240 695 221 0
alu_3
19 672 312 731 293 0
alu_0
19 660 288 719 269 0
alu_1
11 732 264 759 166 0 1
22 648 192 724 172 0 \NUL
ALU Output
25 12 528 119 432
8 12 396 61 347 1 0
20 66 414 125 395 0
sel
20 150 510 209 491 0
kpad_3
20 138 534 197 515 0
kpad_2
20 132 558 191 539 0
kpad_1
20 120 582 179 563 0
kpad_0
19 336 264 395 245 0
in1_2
19 324 240 383 221 0
in1_3
19 360 312 419 293 0
in1_0
19 348 288 407 269 0
in1_1
11 420 264 447 166 0 1
22 336 192 414 172 0 \NUL
ALU Input 1
22 12 78 52 58 0 \NUL
Lab 2
22 12 30 87 10 0 \NUL
Lao, Justin
22 12 54 48 34 0 \NUL
jlao3
19 174 264 233 245 0
kpad_2
19 162 240 221 221 0
kpad_3
19 198 312 257 293 0
kpad_0
19 186 288 245 269 0
kpad_1
11 258 264 285 166 0 1
22 150 192 249 172 0 \NUL
Keypad Output
22 12 144 117 124 0 \NUL
Clear Registers
22 18 324 100 304 0 \NUL
Store Select
22 12 240 121 220 0 \NUL
Update Register
19 492 264 551 245 0
in2_2
19 480 240 539 221 0
in2_3
19 516 312 575 293 0
in2_0
19 504 288 563 269 0
in2_1
11 576 264 603 166 0 1
22 492 192 570 172 0 \NUL
ALU Input 2
22 18 348 230 328 0 \NUL
0 = Keypad input, 1 = ALU result
22 12 102 149 82 0 \NUL
CSE 12, Spring 2020
22 228 450 478 430 0 \NUL
Select clear to initialize registers to 0.
22 228 474 557 454 0 \NUL
Select store select to choose which value to store.
22 228 498 508 478 0 \NUL
Choose read and write register addresses.
22 228 522 727 502 0 \NUL
Read addresses = reg sources of ALU inputs, Write address = reg to save to
22 228 546 480 526 0 \NUL
Press update to save value to register
22 228 594 668 574 0 \NUL
You are only permitted to modify the header comment on this page.
20 60 210 119 191 0
clear
8 6 192 55 143 1 1
20 60 294 119 275 0
update
8 6 288 55 239 1 1
1 655 404 652 371
1 721 404 718 371
1 481 404 478 371
1 547 404 544 371
1 367 404 364 371
1 301 404 298 371
1 259 74 218 74
1 230 98 259 80
1 242 122 259 86
1 254 146 259 92
1 415 74 374 74
1 386 98 415 80
1 398 122 415 86
1 410 146 415 92
1 571 74 530 74
1 542 98 571 80
1 554 122 571 86
1 566 146 571 92
1 727 74 686 74
1 698 98 727 80
1 710 122 727 86
1 722 146 727 92
1 733 230 692 230
1 704 254 733 236
1 716 278 733 242
1 728 302 733 248
1 58 371 67 404
1 421 230 380 230
1 392 254 421 236
1 404 278 421 242
1 416 302 421 248
1 116 500 151 500
1 116 506 139 524
1 116 512 133 548
1 116 518 121 572
1 259 230 218 230
1 230 254 259 236
1 242 278 259 242
1 254 302 259 248
1 577 230 536 230
1 548 254 577 236
1 560 278 577 242
1 572 302 577 248
1 52 167 61 200
1 52 263 61 284
38 2
19 29 323 88 304 0
wadr_1
19 29 305 88 286 0
wadr_0
19 29 274 88 255 0
adr2_1
19 29 256 88 237 0
adr2_0
19 29 226 88 207 0
adr1_1
19 29 208 88 189 0
adr1_0
19 30 176 89 157 0
sel
19 30 158 89 139 0
update
19 30 140 89 121 0
clear
22 294 42 484 22 0 \NUL
Placeholder signal/recievers
22 18 480 388 460 0 \NUL
These are only present so circuit simulates without error
22 18 504 290 484 0 \NUL
Remove these once logic is implemented
22 18 528 266 508 0 \NUL
You are permitted to modify this page
22 12 78 52 58 0 \NUL
Lab 2
22 12 30 87 10 0 \NUL
Lao, Justin
22 12 54 48 34 0 \NUL
jlao3
22 12 102 149 82 0 \NUL
CSE 12, Spring 2020
19 29 390 88 371 0
kpad_1
19 29 372 88 353 0
kpad_2
19 29 354 88 335 0
kpad_3
19 29 408 88 389 0
kpad_0
38 3
22 12 78 52 58 0 \NUL
Lab 2
22 12 30 87 10 0 \NUL
Lao, Justin
22 12 54 48 34 0 \NUL
jlao3
22 12 102 149 82 0 \NUL
CSE 12, Spring 2020
19 24 501 83 482 0
wadr_1
19 22 473 81 454 0
wadr_0
3 138 502 187 453 0 0
20 720 259 779 240 0
reg1_3
20 722 335 781 316 0
reg1_2
20 722 421 781 402 0
reg1_1
20 721 512 780 493 0
reg1_0
24 663 301 712 229 1 1 1
24 663 377 712 305 1 1 1
24 663 463 712 391 1 1 1
24 663 554 712 482 1 1 1
19 24 446 83 427 0
update
5 547 600 596 551 0
19 479 585 538 566 0
clear
15 618 509 667 460
15 618 418 667 369
15 619 332 668 283
15 624 256 673 207
5 92 516 141 467 0
15 371 57 420 8
15 366 133 415 84
15 365 219 414 170
15 365 310 414 261
19 297 362 356 343 0
clear
5 365 377 414 328 0
19 25 166 84 147 0
update
24 410 355 459 283 1 1 1
24 410 264 459 192 1 1 1
24 410 178 459 106 1 1 1
24 410 102 459 30 1 1 1
20 468 313 527 294 0
reg0_0
20 469 222 528 203 0
reg0_1
20 469 136 528 117 0
reg0_2
20 467 60 526 41 0
reg0_3
4 86 228 135 179 0 1
19 22 199 81 180 0
wadr_0
19 22 227 81 208 0
wadr_1
19 290 60 349 41 0
num_3
19 291 136 350 117 0
num_2
19 290 222 349 203 0
num_1
19 289 313 348 294 0
num_0
3 170 206 219 157 0 0
19 579 259 638 240 0
num_3
19 577 335 636 316 0
num_2
19 579 421 638 402 0
num_1
19 579 512 638 493 0
num_0
3 214 482 263 433 0 0
22 10 291 172 271 0 \NUL
Write Address Switch 00
22 10 310 184 290 0 \NUL
Makes Register 0 equal to
22 10 329 254 309 0 \NUL
the num, chosen from ALU or Keypad
22 260 495 422 475 0 \NUL
Write Address Switch 01
22 260 514 434 494 0 \NUL
Makes Register 1 equal to
22 260 533 504 513 0 \NUL
the num, chosen from ALU or Keypad
22 553 38 794 18 0 \NUL
Everytime Update button is pressed,
22 553 57 767 37 0 \NUL
the selected register will change
22 553 76 789 56 0 \NUL
Clear will reset everything back to 0
1 709 249 721 249
1 709 325 723 325
1 709 411 723 411
1 709 502 722 502
1 535 575 548 575
1 593 575 677 297
1 593 575 677 373
1 593 575 677 459
1 593 575 677 550
1 664 484 677 484
1 664 393 677 393
1 677 307 665 307
1 670 231 677 231
1 138 491 139 491
1 93 491 80 491
1 78 463 139 463
1 417 32 424 32
1 424 108 412 108
1 411 194 424 194
1 411 285 424 285
1 411 352 424 351
1 411 352 424 260
1 411 352 424 174
1 411 352 424 98
1 353 352 366 352
1 456 303 469 303
1 456 212 470 212
1 456 126 470 126
1 456 50 468 50
1 78 217 87 217
1 78 189 87 189
1 411 50 346 50
1 345 303 411 303
1 346 212 411 212
1 411 126 347 126
1 171 195 132 203
1 171 167 81 156
1 411 68 216 181
1 411 144 216 181
1 411 230 216 181
1 411 321 216 181
1 664 249 635 249
1 664 325 633 325
1 664 411 635 411
1 664 502 635 502
1 215 471 184 477
1 215 443 80 436
1 664 267 260 457
1 664 343 260 457
1 664 429 260 457
1 664 520 260 457
38 4
22 12 78 52 58 0 \NUL
Lab 2
22 12 30 87 10 0 \NUL
Lao, Justin
22 12 54 48 34 0 \NUL
jlao3
22 12 102 149 82 0 \NUL
CSE 12, Spring 2020
19 9 504 68 485 0
wadr_1
19 10 476 69 457 0
wadr_0
19 9 255 68 236 0
wadr_1
19 9 227 68 208 0
wadr_0
3 120 505 169 456 0 0
3 120 256 169 207 0 0
20 429 61 488 42 0
reg2_3
20 431 137 490 118 0
reg2_2
20 431 223 490 204 0
reg2_1
20 430 314 489 295 0
reg2_0
24 372 103 421 31 1 1 1
24 372 179 421 107 1 1 1
24 372 265 421 193 1 1 1
24 372 356 421 284 1 1 1
5 322 398 371 349 0
19 247 383 306 364 0
clear
15 327 311 376 262
15 327 220 376 171
15 328 134 377 85
15 333 58 382 9
20 708 269 767 250 0
reg3_3
20 710 345 769 326 0
reg3_2
20 710 431 769 412 0
reg3_1
20 709 522 768 503 0
reg3_0
24 651 311 700 239 1 1 1
24 651 387 700 315 1 1 1
24 651 473 700 401 1 1 1
24 651 564 700 492 1 1 1
19 12 447 71 428 0
update
5 561 586 610 537 0
19 493 571 552 552 0
clear
15 606 519 655 470
15 606 428 655 379
15 607 342 656 293
15 612 266 661 217
5 75 242 124 193 0
19 14 181 73 162 0
update
3 175 219 224 170 0 0
19 274 61 333 42 0
num_3
19 277 137 336 118 0
num_2
19 279 223 338 204 0
num_1
19 284 314 343 295 0
num_0
3 191 481 240 432 0 0
19 561 269 620 250 0
num_3
19 565 345 624 326 0
num_2
19 564 431 623 412 0
num_1
19 566 522 625 503 0
num_0
22 10 291 172 271 0 \NUL
Write Address Switch 10
22 10 310 184 290 0 \NUL
Makes Register 2 equal to
22 10 329 254 309 0 \NUL
the num, chosen from ALU or Keypad
22 261 496 423 476 0 \NUL
Write Address Switch 11
22 261 515 435 495 0 \NUL
Makes Register 3 equal to
22 261 534 505 514 0 \NUL
the num, chosen from ALU or Keypad
22 547 38 788 18 0 \NUL
Everytime Update button is pressed,
22 547 57 761 37 0 \NUL
the selected register will change
22 547 76 783 56 0 \NUL
Clear will reset everything back to 0
1 66 466 121 466
1 65 494 121 494
1 418 51 430 51
1 418 127 432 127
1 418 213 432 213
1 418 304 431 304
1 303 373 323 373
1 368 373 386 99
1 368 373 386 175
1 368 373 386 261
1 368 373 386 352
1 373 286 386 286
1 373 195 386 195
1 386 109 374 109
1 379 33 386 33
1 697 259 709 259
1 697 335 711 335
1 697 421 711 421
1 697 512 710 512
1 549 561 562 561
1 607 561 665 307
1 607 561 665 383
1 607 561 665 469
1 607 561 665 560
1 652 494 665 494
1 652 403 665 403
1 665 317 653 317
1 658 241 665 241
1 65 217 76 217
1 65 245 121 245
1 176 180 70 171
1 176 208 166 231
1 373 69 221 194
1 373 145 221 194
1 373 231 221 194
1 373 322 221 194
1 373 51 330 51
1 373 127 333 127
1 373 213 335 213
1 373 304 340 304
1 192 470 166 480
1 192 442 68 437
1 652 259 617 259
1 652 335 621 335
1 652 421 620 421
1 652 512 622 512
1 652 530 237 456
1 652 439 237 456
1 652 353 237 456
1 652 277 237 456
38 5
22 12 78 52 58 0 \NUL
Lab 2
22 12 30 87 10 0 \NUL
Lao, Justin
22 12 54 48 34 0 \NUL
jlao3
22 12 102 149 82 0 \NUL
CSE 12, Spring 2020
31 279 262 328 177 0 1
19 33 331 92 312 0
adr1_0
19 31 303 90 284 0
adr1_1
19 34 250 93 231 0
reg0_0
19 96 156 155 137 0
reg3_0
19 66 186 125 167 0
reg2_0
19 46 218 105 199 0
reg1_0
20 342 226 401 207 0
in1_0
31 662 256 711 171 0 1
19 416 325 475 306 0
adr1_0
19 414 297 473 278 0
adr1_1
19 418 244 477 225 0
reg0_1
19 484 162 543 143 0
reg3_1
19 452 186 511 167 0
reg2_1
19 435 217 494 198 0
reg1_1
20 725 220 784 201 0
in1_1
31 270 479 319 394 0 1
19 24 548 83 529 0
adr1_0
19 22 520 81 501 0
adr1_1
19 25 467 84 448 0
reg0_2
19 87 373 146 354 0
reg3_2
19 57 403 116 384 0
reg2_2
19 37 435 96 416 0
reg1_2
20 333 443 392 424 0
in1_2
31 653 473 702 388 0 1
19 407 542 466 523 0
adr1_0
19 405 514 464 495 0
adr1_1
19 409 461 468 442 0
reg0_3
19 475 379 534 360 0
reg3_3
19 443 403 502 384 0
reg2_3
19 426 434 485 415 0
reg1_3
20 716 437 775 418 0
in1_3
22 245 47 489 27 0 \NUL
Uses MUXs to determine ALU Input 1
22 245 66 604 46 0 \NUL
Depending on Read Address 1 switches from (00 to 11)
22 245 85 608 65 0 \NUL
the MUX will determine which Register to get input from
19 201 287 260 268 0
update
19 588 283 647 264 0
update
19 577 568 636 549 0
update
19 190 574 249 555 0
update
1 280 240 87 293
1 280 246 89 321
1 280 222 90 240
1 280 216 102 208
1 280 210 122 176
1 280 204 152 146
1 343 216 325 216
1 663 234 470 287
1 663 240 472 315
1 663 216 474 234
1 663 210 491 207
1 663 204 508 176
1 663 198 540 152
1 726 210 708 210
1 271 457 78 510
1 271 463 80 538
1 271 439 81 457
1 271 433 93 425
1 271 427 113 393
1 271 421 143 363
1 334 433 316 433
1 654 451 461 504
1 654 457 463 532
1 654 433 465 451
1 654 427 482 424
1 654 421 499 393
1 654 415 531 369
1 717 427 699 427
1 280 258 257 277
1 644 273 663 252
1 654 469 633 558
1 271 475 246 564
38 6
22 12 78 52 58 0 \NUL
Lab 2
22 12 30 87 10 0 \NUL
Lao, Justin
22 12 54 48 34 0 \NUL
jlao3
22 12 102 149 82 0 \NUL
CSE 12, Spring 2020
31 279 252 328 167 0 1
19 33 321 92 302 0
adr2_0
19 31 293 90 274 0
adr2_1
19 34 240 93 221 0
reg0_0
19 96 146 155 127 0
reg3_0
19 66 176 125 157 0
reg2_0
19 46 208 105 189 0
reg1_0
20 342 216 401 197 0
in2_0
31 662 246 711 161 0 1
19 416 315 475 296 0
adr2_0
19 414 287 473 268 0
adr2_1
19 418 234 477 215 0
reg0_1
19 484 152 543 133 0
reg3_1
19 452 176 511 157 0
reg2_1
19 435 207 494 188 0
reg1_1
20 725 210 784 191 0
in2_1
31 270 479 319 394 0 1
19 24 548 83 529 0
adr2_0
19 22 520 81 501 0
adr2_1
19 25 467 84 448 0
reg0_2
19 87 373 146 354 0
reg3_2
19 57 403 116 384 0
reg2_2
19 37 435 96 416 0
reg1_2
20 333 443 392 424 0
in2_2
31 653 473 702 388 0 1
19 407 542 466 523 0
adr2_0
19 405 514 464 495 0
adr2_1
19 409 461 468 442 0
reg0_3
19 475 379 534 360 0
reg3_3
19 443 403 502 384 0
reg2_3
19 426 434 485 415 0
reg1_3
20 716 437 775 418 0
in2_3
22 245 47 489 27 0 \NUL
Uses MUXs to determine ALU Input 2
22 245 66 604 46 0 \NUL
Depending on Read Address 2 switches from (00 to 11)
22 245 85 608 65 0 \NUL
the MUX will determine which Register to get input from
19 204 274 263 255 0
update
19 581 265 640 246 0
update
19 572 561 631 542 0
update
19 194 572 253 553 0
update
1 280 230 87 283
1 280 236 89 311
1 280 212 90 230
1 280 206 102 198
1 280 200 122 166
1 280 194 152 136
1 343 206 325 206
1 663 224 470 277
1 663 230 472 305
1 663 206 474 224
1 663 200 491 197
1 663 194 508 166
1 663 188 540 142
1 726 200 708 200
1 271 457 78 510
1 271 463 80 538
1 271 439 81 457
1 271 433 93 425
1 271 427 113 393
1 271 421 143 363
1 334 433 316 433
1 654 451 461 504
1 654 457 463 532
1 654 433 465 451
1 654 427 482 424
1 654 421 499 393
1 654 415 531 369
1 717 427 699 427
1 280 248 260 264
1 663 242 637 255
1 654 469 628 551
1 271 475 250 562
38 7
31 291 294 340 209 0 1
19 7 360 66 341 0
in1_0
19 7 334 66 315 0
in1_1
19 40 251 99 232 0
in2_2
19 22 280 81 261 0
in2_3
19 60 221 119 202 0
in2_1
19 77 194 136 175 0
in2_0
31 307 488 356 403 0 1
19 23 554 82 535 0
in1_0
19 23 528 82 509 0
in1_1
19 37 449 96 430 0
in2_0
19 29 473 88 454 0
in2_1
19 63 424 122 405 0
in2_3
19 105 401 164 382 0
in2_2
31 685 500 734 415 0 1
19 401 566 460 547 0
in1_0
19 401 540 460 521 0
in1_1
19 431 458 490 439 0
in2_3
19 418 484 477 465 0
in2_0
19 470 431 529 412 0
in2_2
19 507 406 566 387 0
in2_1
31 689 291 738 206 0 1
19 381 331 440 312 0
in1_0
19 381 305 440 286 0
in1_1
19 436 247 495 228 0
in2_1
19 422 274 481 255 0
in2_2
19 457 218 516 199 0
in2_0
19 483 191 542 172 0
in2_3
20 336 258 395 239 0
alu_3
20 734 255 793 236 0
alu_0
20 354 452 413 433 0
alu_1
20 730 464 789 445 0
alu_2
14 619 590 668 541
14 233 586 282 537
14 191 315 240 266
14 594 312 643 263
22 12 78 52 58 0 \NUL
Lab 2
22 12 30 87 10 0 \NUL
Lao, Justin
22 12 54 48 34 0 \NUL
jlao3
22 12 102 149 82 0 \NUL
CSE 12, Spring 2020
22 245 47 487 27 0 \NUL
Uses MUXs to determine ALU Output
22 245 66 625 46 0 \NUL
Rotations based off of Read Register 1 input from 00 to 11
22 245 85 500 65 0 \NUL
Depending on the rotation of the 4 bits,
22 245 104 622 84 0 \NUL
 the MUX will choose which bit to output to the ALU Output
1 292 272 63 324
1 292 278 63 350
1 292 236 133 184
1 292 242 116 211
1 292 248 96 241
1 292 254 78 270
1 308 466 79 518
1 308 472 79 544
1 308 430 161 391
1 308 436 119 414
1 308 442 93 439
1 308 448 85 463
1 686 478 457 530
1 686 484 457 556
1 686 442 563 396
1 686 448 526 421
1 686 454 487 448
1 686 460 474 474
1 690 269 437 295
1 690 275 437 321
1 690 233 539 181
1 690 239 513 208
1 690 245 492 237
1 690 251 478 264
1 355 442 353 442
1 686 496 665 565
1 308 484 279 561
1 292 290 237 290
1 690 287 640 287
38 8
22 12 78 52 58 0 \NUL
Lab 2
22 12 30 87 10 0 \NUL
Lao, Justin
22 12 54 48 34 0 \NUL
jlao3
22 12 102 149 82 0 \NUL
CSE 12, Spring 2020
22 268 52 446 32 0 \NUL
Depending on store select,
22 268 70 531 50 0 \NUL
the MUX will determine to either use the
22 268 89 462 69 0 \NUL
keypad input or the ALU input
19 333 493 392 474 0
alu_0
19 332 515 391 496 0
kpad_0
31 457 545 506 460 0 2
19 332 539 391 520 0
sel
19 330 415 389 396 0
kpad_1
31 454 445 503 360 0 2
19 329 391 388 372 0
alu_1
19 329 439 388 420 0
sel
19 328 314 387 295 0
kpad_2
31 454 344 503 259 0 2
19 328 291 387 272 0
alu_2
19 329 338 388 319 0
sel
19 330 214 389 195 0
kpad_3
31 451 244 500 159 0 2
19 329 189 388 170 0
alu_3
19 333 238 392 219 0
sel
20 540 208 599 189 0
num_3
20 544 308 603 289 0
num_2
20 543 409 602 390 0
num_1
20 542 509 601 490 0
num_0
14 394 265 443 216
14 399 365 448 316
14 398 466 447 417
14 400 566 449 517
1 458 505 388 505
1 458 499 389 483
1 455 405 386 405
1 455 399 385 381
1 455 304 384 304
1 455 298 384 281
1 452 204 386 204
1 452 198 385 179
1 458 529 388 529
1 455 429 385 429
1 455 328 385 328
1 452 228 389 228
1 541 198 497 198
1 545 298 500 298
1 544 399 500 399
1 543 499 503 499
1 452 240 440 240
1 455 340 445 340
1 455 441 444 441
1 458 541 446 541
39 16777215
47 0
40 1 6 6
50 800 600
51 0 100
30
System
16
700
0
0
0
0
0
34
