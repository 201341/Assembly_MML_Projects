41 2 0
38 1
22 8 32 55 8 0 \NUL
Lab 1
22 8 64 98 40 0 \NUL
Lao, Justin
22 8 96 49 72 0 \NUL
jlao3
22 64 272 264 252 0 \NUL
Part A Output                            
8 216 184 265 135 1 0
8 280 184 329 135 1 0
8 352 184 401 135 1 0
11 168 424 195 326 0 1
20 264 208 323 189 0
in_3
20 336 208 395 189 0
in_2
20 408 208 467 189 0
in_1
8 424 184 473 135 1 0
20 480 208 539 189 0
in_0
19 80 312 139 293 0
a_3
19 64 336 123 317 0
a_2
19 48 360 107 341 0
a_1
19 32 384 91 365 0
a_0
22 29 468 340 444 0 \NUL
By flipping the input switches, the LED 
22 29 492 352 468 0 \NUL
will show the sum of the binary switches
22 438 467 753 443 0 \NUL
Depending on which input switches are
7 360 664 409 615 0 1
7 360 704 409 655 0 1
19 272 592 331 573 0
c_2
19 272 632 331 613 0
c_1
19 272 672 331 653 0
c_0
22 416 688 480 668 0 \NUL
SOP/POS
22 416 648 492 628 0 \NUL
NAND Only
22 416 608 484 588 0 \NUL
NOR Only
22 438 491 668 467 0 \NUL
flipped, the LEDs will light up
22 272 744 416 724 0 \NUL
Place comments here
22 272 768 412 748 0 \NUL
describing the output
22 280 32 653 12 0 \NUL
You are only permitted to modify or add text to this page.
22 280 56 605 36 0 \NUL
Your circuit must use senders and/or receivers to
22 280 80 538 60 0 \NUL
interface with these inputs and outputs.
7 472 360 521 311 0 1
7 544 360 593 311 0 1
7 616 360 665 311 0 1
19 416 392 475 373 0
b_2
19 488 392 547 373 0
b_1
19 560 392 619 373 0
b_0
7 360 624 409 575 0 1
22 64 136 616 116 0 \NUL
Input                                                                                                                                 
22 448 272 650 252 0 \NUL
Part B Output                            
22 272 552 473 532 0 \NUL
Part C Output                            
1 470 159 481 198
1 409 198 398 159
1 337 198 326 159
1 265 198 262 159
1 169 390 136 302
1 169 396 120 326
1 169 402 104 350
1 169 408 88 374
1 328 622 361 639
1 328 662 361 679
1 472 382 473 335
1 544 382 545 335
1 616 382 617 335
1 328 582 361 599
38 2
22 8 32 48 12 0 \NUL
Lab 1
22 8 64 98 40 0 \NUL
Lao, Justin
22 9 96 50 72 0 \NUL
jlao3
22 279 60 752 36 0 \NUL
Your circuit must use senders to interface with these LEDs.
22 280 32 522 12 0 \NUL
Do not add any circuitry to this page.
19 96 384 155 365 0
h1
19 136 408 195 389 0
h0
7 152 376 201 327 0 1
7 200 376 249 327 0 1
19 296 344 355 325 0
g0
19 296 376 355 357 0
g1
7 400 256 449 207 0 1
7 360 288 409 239 0 1
19 296 248 355 229 0
f0
19 296 288 355 269 0
f1
7 360 336 409 287 0 1
7 400 376 449 327 0 1
7 360 408 409 359 0 1
19 296 424 355 405 0
e0
19 296 456 355 437 0
e1
7 360 456 409 407 0 1
19 344 504 403 485 0
d1
19 384 528 443 509 0
d0
7 400 496 449 447 0 1
19 344 200 403 181 0
a1
19 424 312 483 293 0
b1
7 448 256 497 207 0 1
7 496 336 545 287 0 1
7 496 288 545 239 0 1
19 424 288 483 269 0
b0
19 424 432 483 413 0
c1
7 448 376 497 327 0 1
7 496 456 545 407 0 1
7 496 408 545 359 0 1
19 424 408 483 389 0
c0
7 448 496 497 447 0 1
19 392 168 451 149 0
a0
1 153 351 152 374
1 201 351 192 398
1 352 334 401 351
1 352 366 449 351
1 401 231 400 190
1 352 238 361 263
1 352 278 361 311
1 352 414 361 383
1 352 446 361 431
1 401 471 400 494
1 449 471 440 518
1 480 302 497 311
1 449 231 448 158
1 480 278 497 263
1 480 422 497 431
1 480 398 497 383
38 3
22 8 32 48 12 0 \NUL
Lab 1
22 8 64 98 40 0 \NUL
Lao, Justin
22 8 96 49 72 0 \NUL
jlao3
19 32 216 91 197 0
in_3
19 32 240 91 221 0
in_2
19 32 264 91 245 0
in_1
19 32 288 91 269 0
in_0
22 24 600 390 580 0 \NUL
these are only present so circuit simulates without error
22 24 624 291 604 0 \NUL
remove these once logic is implemented
22 32 184 262 164 0 \NUL
placeholder senders and receivers
20 128 400 187 381 0
e1
20 128 424 187 405 0
e0
20 128 448 187 429 0
f1
20 128 472 187 453 0
f0
20 128 496 187 477 0
g1
20 128 520 187 501 0
g0
20 128 544 187 525 0
h1
20 128 568 187 549 0
h0
20 128 208 187 189 0
a1
20 128 232 187 213 0
a0
20 128 256 187 237 0
b1
20 128 280 187 261 0
b0
20 128 304 187 285 0
c1
20 128 328 187 309 0
c0
20 128 352 187 333 0
d1
20 128 376 187 357 0
d0
38 4
22 8 32 48 12 0 \NUL
Lab 1
22 8 64 98 40 0 \NUL
Lao, Justin
22 8 96 49 72 0 \NUL
jlao3
20 440 228 499 209 0
a_3
20 440 252 499 233 0
a_2
20 440 276 499 257 0
a_1
20 440 300 499 281 0
a_0
19 245 228 304 209 0
in_3
19 245 252 304 233 0
in_2
19 245 276 304 257 0
in_1
19 245 300 304 281 0
in_0
22 129 117 685 93 0 \NUL
Receivers for the input switches are used to "activate" the 7-part LED
22 129 140 253 116 0 \NUL
signal senders.
1 301 218 441 218
1 301 242 441 242
1 301 266 441 266
1 301 290 441 290
38 5
22 8 32 48 12 0 \NUL
Lab 1
22 8 64 98 40 0 \NUL
Lao, Justin
22 8 96 49 72 0 \NUL
jlao3
3 215 438 264 389 0 0
4 394 483 443 434 0 0
20 485 468 544 449 0
b_1
20 483 236 542 217 0
b_2
20 477 673 536 654 0
b_0
14 415 688 464 639
19 94 482 153 463 0
in_0
19 94 437 153 418 0
in_0
19 93 409 152 390 0
in_1
19 96 250 155 231 0
in_0
19 95 222 154 203 0
in_1
35 254 251 303 202 0 0
22 94 372 640 348 0 \NUL
b_1 LED is on when both in_1 and in_0 are on, or when just in_0 is on.
22 94 167 544 143 0 \NUL
b_2 LED is on when in_1 or in_0 are exclusively (XOR) on.
22 88 610 264 586 0 \NUL
b_0 LED is always off.
1 261 413 395 444
1 486 458 440 458
1 478 663 461 663
1 150 472 395 472
1 150 427 216 427
1 149 399 216 399
1 151 212 255 212
1 152 240 255 240
1 300 226 484 226
38 6
22 8 32 48 12 0 \NUL
Lab 1
22 8 64 98 40 0 \NUL
Lao, Justin
22 8 96 49 72 0 \NUL
jlao3
22 174 49 587 25 0 \NUL
C.1: Implementing SoP from given truth table for c_0
19 222 113 281 94 0
in_2
19 221 149 280 130 0
in_1
19 222 187 281 168 0
in_0
20 660 313 719 294 0
c_0
5 289 128 338 79 0
5 304 164 353 115 0
5 325 625 374 576 0
19 223 641 282 622 0
in_0
19 226 610 285 591 0
in_1
19 225 577 284 558 0
in_2
5 329 496 378 447 0
5 305 465 354 416 0
19 222 481 281 462 0
in_0
19 225 450 284 431 0
in_1
19 224 417 283 398 0
in_2
5 292 280 341 231 0
19 223 338 282 319 0
in_0
19 224 308 283 289 0
in_1
19 223 265 282 246 0
in_2
3 394 627 443 578 1 0
3 392 323 441 274 1 0
3 392 465 441 416 1 0
4 572 328 621 279 2 0
3 390 164 439 115 1 0
22 68 152 184 128 0 \NUL
in_2' in_1' in_0
22 64 310 176 286 0 \NUL
in_2' in_1 in_0
22 64 452 180 428 0 \NUL
in_2 in_1' in_0'
22 69 609 181 585 0 \NUL
in_2 in_1' in_0
1 277 139 305 139
1 661 303 618 303
1 573 317 440 602
1 573 308 438 440
1 573 298 438 298
1 395 616 279 631
1 395 602 371 600
1 395 588 281 567
1 326 600 282 600
1 393 454 375 471
1 330 471 278 471
1 351 440 393 440
1 306 440 281 440
1 393 426 280 407
1 393 312 279 328
1 393 298 280 298
1 393 284 338 255
1 279 255 293 255
1 335 103 391 125
1 350 139 391 139
1 278 177 391 153
1 573 289 436 139
1 278 103 290 103
38 7
22 8 32 55 8 0 \NUL
Lab 1
22 8 55 98 31 0 \NUL
Lao, Justin
22 8 78 49 54 0 \NUL
jlao3
22 395 44 769 20 0 \NUL
C.2: Implementing SoP using only NAND for c_1
19 106 102 165 83 0
in_2
19 107 147 166 128 0
in_1
19 108 202 167 183 0
in_0
20 721 396 780 377 0
c_1
3 184 118 233 69 0 1
3 183 164 232 115 0 1
3 239 140 288 91 0 1
3 312 142 361 93 0 1
3 403 203 452 154 0 1
3 92 381 141 332 0 1
3 165 383 214 334 0 1
19 9 321 68 302 0
in_1
19 7 396 66 377 0
in_0
3 115 293 164 244 0 1
19 14 278 73 259 0
in_2
3 304 307 353 258 0 1
3 416 306 465 257 0 1
19 85 474 144 455 0
in_2
19 86 519 145 500 0
in_1
19 86 571 145 552 0
in_0
3 165 535 214 486 0 1
3 164 581 213 532 0 1
3 235 556 284 507 0 1
3 308 558 357 509 0 1
3 385 503 434 454 0 1
3 497 502 546 453 0 1
3 98 701 147 652 0 1
3 171 703 220 654 0 1
19 13 766 72 747 0
in_1
19 16 712 75 693 0
in_0
3 96 781 145 732 0 1
19 19 666 78 647 0
in_2
3 322 767 371 718 0 1
3 434 766 483 717 0 1
22 223 177 339 153 0 \NUL
in_2' in_1' in_0
22 120 321 232 297 0 \NUL
in_2' in_1 in_0
22 163 733 275 709 0 \NUL
in_2 in_1' in_0
22 231 502 347 478 0 \NUL
in_2 in_1' in_0'
3 515 202 564 153 0 1
3 576 207 625 158 0 1
3 482 306 531 257 0 1
3 568 505 617 456 0 1
3 503 765 552 716 0 1
3 660 411 709 362 2 1
1 162 92 185 79
1 162 92 185 107
1 163 137 184 125
1 163 137 184 153
1 230 93 240 101
1 229 139 240 129
1 285 115 313 103
1 285 115 313 131
1 164 192 404 192
1 358 117 404 164
1 138 356 166 344
1 138 356 166 372
1 65 311 93 342
1 63 386 93 370
1 70 268 116 254
1 70 268 116 282
1 350 282 417 267
1 350 282 417 295
1 161 268 305 268
1 211 358 305 296
1 211 510 236 517
1 210 556 236 545
1 281 531 309 519
1 281 531 309 547
1 431 478 498 463
1 431 478 498 491
1 142 509 166 496
1 142 509 166 524
1 142 561 165 542
1 142 561 165 570
1 141 464 386 464
1 354 533 386 492
1 144 676 172 664
1 144 676 172 692
1 368 742 435 727
1 368 742 435 755
1 75 656 99 662
1 72 702 99 690
1 217 678 323 728
1 69 756 97 742
1 69 756 97 770
1 142 756 323 756
1 449 178 516 191
1 449 178 516 163
1 561 177 577 168
1 561 177 577 196
1 462 281 483 267
1 462 281 483 295
1 543 477 569 466
1 543 477 569 494
1 480 741 504 726
1 480 741 504 754
1 549 740 661 400
1 614 480 661 391
1 528 281 661 381
1 622 182 661 372
1 706 386 722 386
38 8
22 395 44 758 20 0 \NUL
C.3: Implementing SoP using only NOR for c_1
22 8 32 55 8 0 \NUL
Lab 1
22 8 55 98 31 0 \NUL
Lao, Justin
22 8 78 49 54 0 \NUL
jlao3
19 94 104 153 85 0
in_2
19 95 149 154 130 0
in_1
19 96 204 155 185 0
in_0
20 716 386 775 367 0
c_2
4 341 145 390 96 0 1
4 267 143 316 94 0 1
4 211 166 260 117 0 1
4 212 119 261 70 0 1
4 447 204 496 155 0 1
4 267 218 316 169 0 1
4 398 147 447 98 0 1
19 14 281 73 262 0
in_2
19 15 354 74 335 0
in_1
19 16 409 75 390 0
in_0
4 107 294 156 245 0 1
4 165 392 214 343 0 1
4 109 415 158 366 0 1
4 110 368 159 319 0 1
4 267 143 316 94 0 1
4 211 166 260 117 0 1
4 212 119 261 70 0 1
4 323 322 372 273 0 1
4 267 373 316 324 0 1
4 268 298 317 249 0 1
4 323 322 372 273 0 1
4 267 373 316 324 0 1
4 268 298 317 249 0 1
4 305 577 354 528 0 1
4 231 575 280 526 0 1
4 175 598 224 549 0 1
4 176 551 225 502 0 1
4 231 575 280 526 0 1
4 175 598 224 549 0 1
4 176 551 225 502 0 1
4 429 512 478 463 0 1
4 176 498 225 449 0 1
19 75 483 134 464 0
in_2
19 76 528 135 509 0
in_1
19 77 583 136 564 0
in_0
4 365 577 414 528 0 1
19 18 672 77 653 0
in_2
19 16 768 75 749 0
in_1
4 108 787 157 738 0 1
4 161 707 210 658 0 1
4 105 730 154 681 0 1
4 106 683 155 634 0 1
4 333 751 382 702 0 1
4 223 782 272 733 0 1
19 18 712 77 693 0
in_0
4 219 709 268 660 0 1
22 293 171 409 147 0 \NUL
in_2' in_1' in_0
22 161 324 273 300 0 \NUL
in_2' in_1 in_0
22 264 512 380 488 0 \NUL
in_2 in_1' in_0'
22 173 735 285 711 0 \NUL
in_2 in_1' in_0
4 639 401 688 352 2 1
4 573 403 622 354 2 1
1 150 94 213 80
1 150 94 213 108
1 151 139 212 127
1 151 139 212 155
1 258 94 268 104
1 257 141 268 132
1 313 118 342 106
1 313 118 342 134
1 152 194 268 179
1 152 194 268 207
1 387 120 399 108
1 313 193 448 193
1 444 122 448 165
1 387 120 399 136
1 70 271 108 255
1 70 271 108 283
1 156 343 166 353
1 155 390 166 381
1 258 94 268 104
1 257 141 268 132
1 314 273 324 283
1 313 348 324 311
1 71 344 111 329
1 71 344 111 357
1 72 399 110 376
1 72 399 110 404
1 211 367 268 362
1 211 367 268 334
1 153 269 269 259
1 153 269 269 287
1 222 526 232 536
1 221 573 232 564
1 277 550 306 538
1 277 550 306 566
1 132 518 177 512
1 132 518 177 540
1 133 573 176 559
1 133 573 176 587
1 131 473 177 459
1 131 473 177 487
1 222 473 430 473
1 351 552 366 538
1 351 552 366 566
1 411 552 430 501
1 152 658 162 668
1 151 705 162 696
1 269 757 334 740
1 72 758 109 748
1 72 758 109 776
1 74 702 106 691
1 74 702 106 719
1 74 662 107 644
1 74 662 107 672
1 154 762 224 743
1 154 762 224 771
1 207 682 220 670
1 207 682 220 698
1 265 684 334 712
1 685 376 717 376
1 493 179 574 364
1 369 297 574 373
1 475 487 574 383
1 379 726 574 392
1 619 378 640 362
1 619 378 640 371
1 619 378 640 381
1 619 378 640 390
39 16777215
47 0
40 1 8 8
50 800 800
51 1 30
30
System
20
700
0
0
1
2
2
34
